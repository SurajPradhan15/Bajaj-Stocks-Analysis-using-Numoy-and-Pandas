# -*- coding: utf-8 -*-
"""Untitled2.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1HvLUwaFCQzXvVDyaDXZnLXvT7KvLk9p4

# Importing Libraries
"""

import pandas as pd

import matplotlib.pyplot as plt

"""# Importing Dataset"""

bajaj_auto=pd.read_csv("/content/BAJAJ-AUTO.csv")
bajajfinsv=pd.read_csv("/content/BAJAJFINSV.csv")
bajfin=pd.read_csv("/content/BAJFINANCE.csv")

"""# Viewing Data"""

print(bajaj_auto.head())

"""# Checking Size of Data"""

bajaj_auto.shape

"""# Checking for Null Values"""

bajaj_auto.isna().sum()

"""# Checking for Duplicate Values"""

bajaj_auto.duplicated().sum()

bajajfinsv.duplicated().sum()

bajfin.duplicated().sum()

"""# Description of Data in the Dataframe and rounding its values up to two decimal places"""

bajaj_auto.describe().round(2)

"""# **Working on Data**

# Converting the “Date” column dtype from object to date
"""

bajaj_auto["Date"]=pd.to_datetime(bajaj_auto["Date"])
bajajfinsv["Date"]=pd.to_datetime(bajajfinsv["Date"])
bajfin["Date"]=pd.to_datetime(bajfin["Date"])

"""# Dropping columns Trades, Deliverable Volume, and %Deliverable"""

bajaj_auto=bajaj_auto.drop(['Trades','Deliverable Volume','%Deliverble'], axis=1)
bajajfinsv=bajajfinsv.drop(['Trades','Deliverable Volume','%Deliverble'], axis=1)
bajfin=bajfin.drop(['Trades','Deliverable Volume','%Deliverble'], axis=1)

"""# Adding 3 more new columns to each of the Dataset"""

bajaj_auto['Month']=bajaj_auto["Date"].dt.month

bajaj_auto['Year']=bajaj_auto["Date"].dt.year

bajaj_auto['Day']=bajaj_auto["Date"].dt.day


bajajfinsv['Month']=bajajfinsv["Date"].dt.month

bajajfinsv['Year']=bajajfinsv["Date"].dt.year

bajajfinsv['Day']=bajajfinsv["Date"].dt.day


bajfin['Day']=bajfin['Date'].dt.day

bajfin['Year']=bajfin['Date'].dt.year

bajfin['Month']=bajfin['Date'].dt.month

"""# **Comparing the Data**

# Price Comparision
"""

plt.figure(figsize=(20,7))

plt.plot(bajaj_auto['Date'],bajaj_auto['Open'],color='blue',label='Tata Motors')

plt.plot(bajajfinsv['Date'],bajajfinsv['Open'],color='grey',label='Tata Steel')

plt.plot(bajfin['Date'],bajfin['Open'],color='orange',label='TCS')


plt.title("Relation between BAJAJ AUTO, BAJAJFINSV and BAJ FINANCE")

plt.xlabel("Year")

plt.ylabel("Price")

plt.legend(title="")

plt.show()

"""# Volume Comparision"""

plt.figure(figsize=(20,7))

plt.plot(bajaj_auto['Date'],bajaj_auto['Volume'],color='blue',label='Tata Motors')

plt.plot(bajajfinsv['Date'],bajajfinsv['Volume'],color='grey',label='Tata Steel')

plt.plot(bajfin['Date'],bajfin['Volume'],color='orange',label='TCS')



plt.title("Relation between BAJAJ AUTO, BAJAJFINSV and BAJ FINANCE")

plt.xlabel("Year")

plt.ylabel("Volume")

plt.legend(title="")

plt.show()

"""# **Return on Investment (ROI)**

# BAJAJ AUTO ROI
"""

sum_BA=0 #total amount invested in BAJAJ AUTO

s1=0 #number of shares owned by BAJAJ AUTO

#calcuating total amount invested and number of shares owned in BAJAJ AUTO

for i in range(len(bajaj_auto)):

    if bajaj_auto.loc[i,'Day']==30:

        sum_BA+=bajaj_auto.loc[i,'Open']

        s1+=1

#displaying basic results

print("Total Invested in BAJAJ AUTO = Rs",round(sum_BA,2))

print("Shares Owned of BAJAJ AUTO =",s1)

print("Average Investmentment of 1 share = Rs",round((sum_BA/s1),2))

BA_END=298.2 #last open price of BAJAJ AUTO on 2021-04-30

#obtained by looking at the data or can be seen after executing BAJAJ AUTO.tail()

#calculating investment results

result1=round((BA_END*s1)-sum_BA,2)

roi_BA=round((result1/sum_BA)*100,2)


#displaying investment results

print("nInvestment Result:")


if result1<0:

    print("Net Unrealised Loss = Rs",result1)

else:

    print("Net Unrealised Profit = Rs",result1)



print("BAJAJ AUTO ROI from 2000-1-3 to 2021-04-30 =",roi_BA,"%")

"""# BAJAJFINSV ROI"""

sum_BS=0 #total amount invested in BAJAJFINSV

s2=0 #number of shares owned by BAJAJFINSV

#calcuating total amount invested and number of shares owned in BAJAJFINSV

for i in range(len(bajajfinsv)):

    if bajajfinsv.loc[i,'Day']==30:

        sum_BS+=bajajfinsv.loc[i,'Open']

        s2+=1


#displaying basic results

print("Total Invested in BAJAJFINSV = Rs",round(sum_BS,2))

print("Shares Own of BAJAJFINSV =",s2)

print("Average Investmentment of 1 share = Rs",round((sum_BS/s2),2))

BS_end=1024 #last open price of BAJAJFINSV on 2021-04-30

#obtained by looking at the data or can be seen after executed BAJAJFINSV.tail()


#calculating investment results

result2=round((BS_end*s2)-sum_BS,2)

roi_BS=round((result2/sum_BS)*100,2)



#displaying investment results

print("nInvestment Result:")



if result2<0:

    print("Net Unrealised Loss = Rs",result2)

else:

    print("Net Unrealised Profit = Rs",result2)

print("BAJAJFINSV ROI from 2000-1-3 to 2021-04-30 =",roi_BS,"%")

"""# BAJ FINANCE ROI"""

sum_BF=0 #total amount invested in BAJ FINANCE

s3=0 #number shares owned of BAJ FINANCE




#calcuating total amount invested and number of shares owned in BAJ FINANCE

for i in range(len(bajfin)):

    if bajfin.loc[i,'Day']==30:

        sum_BF+=bajfin.loc[i,'Open']

        s3+=1




#displaying basic results

print("Total Invested in BAJ FINANCE = Rs",round(sum_BF,2))

print("Shares Owned of BAJ FINANCE =",s3)

print("Average Investmentment of 1 share = Rs",round((sum_BF/s3),2))

BF_end=3099 #last open price of BAJ FINANCE on 2021-04-30

#obtained by looking at the data or can be seen after executed BAJ FINANCE.tail()




#calculating investment results

result3=round((BF_end*s3)-sum_BF,2)

roi_BF=round((result3/sum_BF)*100,2)




#displaying investment results

print("nInvestment Result:")




if result3<0:

    print("Net Unrealised Loss = Rs",result3)

else:

    print("Net Unrealised Proift = Rs",result3)


print("BAJ FINANCE ROI from 2004-08-25 to 2021-04-30 =",roi_BF,"%")

"""# **Investment Results (Graphically)**

# Plotting ROI on Bar Graph
"""

plt.figure(figsize=(5,7))

stock=['BAJAJ AUTO','BAJAJFINSV','BAJ FINANCE']

ROI=[roi_BA,roi_BS,roi_BF]

col=['Blue','Grey','Orange']




plt.bar(stock,ROI,color=col)




plt.title("ROI")

plt.xlabel("Stocks")

plt.ylabel("Percentage")

"""# Plotting Profit/Loss Amount on Bar Graph"""

plt.figure(figsize=(5,7))

stock=['BAJAJ AUTO','BAJAJFINSV','BAJ FINANCE']

amt=[result1,result2,result3]

col=['Blue','Grey','Orange']




plt.bar(stock,amt,color=col)




plt.title("Profit/Loss")

plt.xlabel("Stocks")

plt.ylabel("Amount")

"""# Portfolio Allocation

Displaying Number of shares owned.
"""

plt.figure(figsize=(5,7))

stock=['BAJAJ AUTO','BAJAJFINSV','BAJ FINANCE']

shares=[s1,s2,s3]

col=['Blue','Grey','Orange']



plt.pie(shares,labels=stock,autopct="%1.2f%%",colors=col)

plt.legend(title="",loc="upper left")

plt.title("Portfolio Allocation")

